[gcode_macro PRINT_START]
gcode:
  {% set TOOL = params.TOOL | default(-1)| int %}
  {% set TOOL_TEMP = params.TOOL_TEMP | default(0) | int %}
  {% set BED_TEMP = params.BED_TEMP | default(0) | int %}

  STOP_CRASH_DETECTION

  M117 Heating Bed
  M104 S150
  M190 S{BED_TEMP}


  M117 Homing
  G28
  T0

  M117 Quad Gantry Level
  QUAD_GANTRY_LEVEL
  G28 Z

  
  STATUS_MESHING
  BED_MESH_CALIBRATE ADAPTIVE=1

  G90 ; Absolute positioning
  G92 E0 ; Zero extruder
  #M106 S100 ; Start part cooling fan, 255=100%
  G0 Z10 F3000
  G1 X2 Y10 F5000

  M117 Heating up the hotend
    
    {% if TOOL >= 0 %}
        M104 T0 S0 ; shutdown T0.  If it's up first it will be heated below.
        T{params.TOOL}
        {% set initialToolTemp = 'T' ~ params.TOOL|string ~ '_TEMP' %}
        M117 Waiting on T{params.TOOL} S{params[initialToolTemp]}C
        M109 S{params[initialToolTemp]}
    {% else %}
        M109 S{TOOL_TEMP}
    {% endif %}

  START_CRASH_DETECTION
    

 
  PRIME_LINE
  M117 Printing


[gcode_macro PRINT_END]
gcode:
  _TOOLCHANGER_PRINT_END_START {rawparams}
  STOP_TOOL_PROBE_CRASH_DETECTION
  M400                           ; wait for buffer to clear
  CLEAR_PAUSE

  M220 S100
  M221 S100
  SET_PRESSURE_ADVANCE ADVANCE=0
  {% if printer.extruder.temperature >= 180 %}
  M83
  G91
  G1 E-2 F2400                   ; retract filament
  G1 E-2 Z5 F2400
  {% endif %}
  M82
  G90

  SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0

  TURN_OFF_HEATERS
  _TOOLCHANGER_TURN_OFF_FANS     ; turn off fan
  M140 S0                        ; turn off bed

  _TOOLCHANGER_PRINT_END_END {rawparams}
  M117 Print done






[gcode_macro _TOOLCHANGER_PRINT_START_END]
description: Important toolchanger print_start end calls
gcode:
  STATUS_MESHING
  BED_MESH_CALIBRATE ADAPTIVE=1
  #M117 Loading mesh...
  #BED_MESH_PROFILE LOAD=default #disabled by default, uncomment to load saved bed_mesh profile
  #M117 Loading skew...
  #SKEW_PROFILE LOAD=CaliFlower # disabled by default, uncomment to load saved skew profile


[gcode_macro _TOOLCHANGER_PRINT_END_START]
description: Important toolchanger print_end start calls
gcode:


[gcode_macro _TOOLCHANGER_PRINT_END_END]
description: Important toolchanger print_end end calls
gcode:
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float  - 10 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set cur_z = printer.toolhead.position.z|float %}
  {% if (cur_z + 15) <= max_z %}
    {% set safe_z = cur_z + 15 %}
  {% else %}
    {% set safe_z = max_z %}
  {% endif %}

  G1 X0 Y{max_y} Z{safe_z} F3000 ; bring nozzle left and bed forward

  BED_MESH_CLEAR
  _TOOLCHANGER_DISABLE_EXTRUDER_STEPPERS





[gcode_macro PRIME_LINES]
description: Prime all active tools before printing.
  INITIAL_TOOL= Tool number, optional.
variable_tools_per_x:          6      # Number of tools primed in a single row
variable_lines_per_tool:       4      # Number of prime lines per tool
variable_line_step_y:          2      # Distance between lines in Y axis
variable_spacing:              7      # Distance between each tools prime lines
variable_ratio:                4      # Distance to move per 1mm of extrusion
variable_x_neg_offset:         5      # Distance from Edge of the bed on the -X axis
variable_x_pos_offset:         5      # Distance from Edge of the bed on the +X axis
variable_y_offset:             5      # Distance from Edge of the bed on the -Y axis
variable_pre_prime:            8      # Amount of extrude to do before starting prime line
variable_wipe_length:          6      # Wipe length after prime
variable_initial_tool_retract: 0.2    # Retraction distance for the initial tool (if defined) after prime
variable_docked_tool_retract:  0.5    # Retraction distance for docked tools after prime
variable_z_prime_pos:          0.3    # Distance from bed on Z axis while priming
variable_z_move_pos:           1      # Distance from bed on Z axis while moving
variable_move_speed:           10000  # Travel move speed
variable_prime_speed:          1000   # Prime move speed
variable_wipe_speed:           3000   # Wipe move speed
variable_temp_drop:            30     # Amount of temperature drop applied to nozzles that are being docked

gcode:
  SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set line_length = (max_x-(x_neg_offset+x_pos_offset)-(spacing*(tools_per_x-1)))/tools_per_x %}
  {% set print_tools = [] %}

  # Figure out the required tools by which tools are preheating
  {% for tn in printer.toolchanger.tool_numbers %}
    {% set extruder_id = "extruder" + tn|string if tn > 0 else "extruder" %}

    {% if printer[extruder_id].target >= printer.configfile.settings[extruder_id].min_extrude_temp %}
      {% set gengar = print_tools.append(tn) %}
    {% endif %}
  {% endfor %}

  # Make sure the initial print tool is the last to prime
  {% if params.INITIAL_TOOL is defined %}
    {% set initial_tool = params.INITIAL_TOOL|int %}

    {% if print_tools|length > 1 %}
      {% set snorlax   = print_tools.pop(print_tools.index(initial_tool)) %}
      {% set lickitung = print_tools.append(initial_tool) %}
    {% endif %}
  
    {% if printer.toolchanger.tool_number != initial_tool and printer.toolchanger.tool_number != print_tools[0] and printer.toolchanger.tool_number in print_tools %}
      {% set mimikyu = print_tools.pop(print_tools.index(printer.toolchanger.tool_number)) %}
      {% set bulbasaur = print_tools.insert(0, printer.toolchanger.tool_number) %}
    {% endif %}

    {% else %}
      {% set initial_tool = None %}
  {% endif %}
  
  {% for tn in print_tools %}
    # Change tool
    T{tn}

    {% set extruder_id = "extruder" + tn|string if tn > 0 else "extruder" %}
    {% set t_idx = print_tools.index(tn) %}
    {% set y_idx = (t_idx/tools_per_x)|int %}
    {% set x_tool_list = print_tools[y_idx*tools_per_x:] %}
    {% set x_idx = x_tool_list.index(tn) %}
    {% set prime_start_x = x_neg_offset + (x_idx*line_length) + (x_idx*spacing) %}
    {% set prime_start_y = y_offset + (line_step_y*(lines_per_tool-1)) + (y_idx*spacing) %}

    # Move to position
    G0 X{prime_start_x} Y{prime_start_y} Z{z_move_pos} F{move_speed}
    G0 Z{z_prime_pos} F{move_speed}

    # Wait for temp
    M109 S{printer[extruder_id].target} T{tn}

    # Prime Tool
    M117 Priming T{tn}
    M83
    G92 E0
    G91
    G1 E{pre_prime} F{prime_speed}
    
    {% for i in range(lines_per_tool) %}
      {% set last_line = i == lines_per_tool-1 %}
      {% set segment = ((line_length/ratio)-2)|int if last_line else ((line_length/ratio)+1)|int %}
      
      {% if i % 2 == 0 %}
        {% for _i in range(1, segment) %}
          G1 X{ratio} E1 F{prime_speed}
        {% endfor %}
      {% else %}
        {% for _i in range(1, segment) %}
          G1 X-{ratio} E1 F{prime_speed}
        {% endfor %}
      {% endif %}
  
      {% if not last_line %}
        G1 Y-{line_step_y} E{(line_step_y/ratio)*1} F{move_speed}
      {% endif %}
    {% endfor %}

    G1 E-{initial_tool_retract if tn == initial_tool else docked_tool_retract} F{wipe_speed}
    G0 X{-0.5 if lines_per_tool % 2 == 0 else 0.5} F{wipe_speed}
    G0 X{wipe_length-0.5 if lines_per_tool % 2 == 0 else -(wipe_length-0.5)} F{wipe_speed}
    G0 Z{z_move_pos}

    # Reduce temp for tools that are not required yet
    {% if params.INITIAL_TOOL is defined %}
      {% if initial_tool in print_tools %}
        {% if tn != initial_tool %}
          M104 S{printer[extruder_id].target-temp_drop} T{tn}
        {% endif %}
      {% endif %}
    {% endif %}

  G90

  {% endfor %}

  RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE
  
  # Use the correct offset for the current tool
  _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
